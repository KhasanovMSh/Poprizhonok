//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Попрыжонок.Models
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Agent
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Agent()
        {
            this.Agent_SellPoint = new HashSet<Agent_SellPoint>();
            this.MinimumPrice = new HashSet<MinimumPrice>();
            this.PriorityHistory = new HashSet<PriorityHistory>();
            this.ProductSale = new HashSet<ProductSale>();
        }
    
        public int Id { get; set; }
        public int Id_AgentType { get; set; }
        public int Id_Director { get; set; }
        public string Name { get; set; }
        public string Address { get; set; }
        public string INN { get; set; }
        public string KPP { get; set; }
        public string Phone { get; set; }
        public string Email { get; set; }
        public string Logo { get; set; }

        public string LogoPath
        {
            get
            {
                if(Logo == null || Logo == "")
                {
                    return "/Resources/Icons/picture.png";
                }
                else
                {
                    return $"/Resources/Agents/{Logo.Replace("\\","").Replace("agents","")}";
                }
            }
        }

        public int SaleBeYear
        {
            get
            {
                var agentList = ProductSale.ToList();
                
                return agentList.Where(p => p.Date.DayOfYear <= 365).Sum(c=>c.Count);
            }
        }

        public int SalePercent
        {
            get
            {
                var agentList = ProductSale.ToList();

                return agentList.Where(p => p.Date.DayOfYear <= 365).Sum(c => c.Count);
            }
        }
        public Nullable<int> Priority { get; set; }
    
        public virtual AgentType AgentType { get; set; }
        public virtual Director Director { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Agent_SellPoint> Agent_SellPoint { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MinimumPrice> MinimumPrice { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PriorityHistory> PriorityHistory { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ProductSale> ProductSale { get; set; }

       
    }
}
